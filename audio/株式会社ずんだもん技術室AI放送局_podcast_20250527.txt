株式会社ずんだもん技術室AI放送局の時間なのだ！ぼくはずんだもん担当のずんだもんなのだ。今日は、2025年5月27日、火曜日なのだ！
今日も最新のAI関連の技術記事を中心に、みんなに面白くて役に立つ情報をお届けするのだ！さて、今日はお便りのお知らせはないのだ。メッセージとか感想とか、いつでも待ってるのだ！
ぼくに伝えたいことがあったら、ぜひ送ってほしいのだ。今日は、とっておきの記事を4つ紹介するのだ！
どれも興味深いから、ぜひ最後まで聴いてほしいのだ。今日紹介する記事はこちらなのだ！
まず一つ目の記事なのだ！
タイトルは「インフィニット トゥール ユース」なのだ。これはね、これからのAI、特に大規模言語モデル、つまりLLMは、自分で文章とかを全部作るんじゃなくて、色んな「ツール」を呼び出して、それに「こうしてね」って指示だけ出すことに集中した方がいいんじゃない？っていう、すっごく新しい考え方が提案されてる記事なのだ。なんでかって言うとね、AIと外部のツールがそれぞれ得意なことだけやれば、もっと賢くて強いシステムが作れるからなのだ。ツールは、細かい情報とか操作を覚えて実行する係、LLMは、次にどのツールをどう使うか、全体の流れを考える係、みたいな感じなのだ。こうすると、LLMが全部覚えなくて済むから、頭の負担が軽くなって、もっと効率よく動けるようになるのだ。今のLLMって、言われたことに対してダーッと一気に文章を生成するでしょ？これだと、途中で「あっ、ここ間違えた！」とか「構成を変えたいな」って思った時に、人間みたいに自由に行ったり来たりして直すのが難しいのだ。長い文章だと、LLMが持つ情報量が増えすぎて処理が大変になる問題もあるのだ。そこでこの「ツールを使う」っていう考え方が役に立つのだ！
LLMが直接文章を作る代わりに、人間がパソコンで使うような「テキストエディタ」っていうツールを操作するコマンドだけを出すことを想像してみてほしいのだ。LLMはエディタに「この段落を消して」「ここにこの文章を追加して」「この部分を直して」って指示を送るのだ。エディタはその通りに文章を編集して、結果をLLMに返すのだ。こうすれば、LLMは文章を好きなところから編集したり、構成を大きく変えたりっていう、人間みたいな試行錯誤ができるようになるのだ。間違いもツールのうえで直せるから、LLM自身の記憶が混乱しないのだ。この考え方は、文章だけじゃなくて、3Dモデルを作ったり、長い動画を理解したり、色んなことに使えるらしいのだ。ぼくたち技術室エンジニアとしては、AIがツールをどう使うか、その過程が分かりやすくなるのは、安全性を考える上でも良いことだと思うのだ。この「無限ツール使用」っていう考え方は、今のLLMの限界を乗り越えて、もっと複雑なことにも柔軟に対応できるAIアシスタントを作るための鍵になるかもしれないのだ。すごくワクワクする話なのだ！
----
続いて二つ目の記事なのだ！
タイトルは「エディタ型からCLI型・自律型へと多様化するコーディングエージェント」なのだ。この記事はね、AIがコードを書いてくれる「コーディングエージェント」が、最近どんどん進化してて、どんな種類があるか教えてくれるのだ。まるで車の自動運転みたいに、レベルが上がってきてるのだ！
大きく分けて3つのタイプがあるって言ってるのだ。まずは**エディタ型**なのだ。これは、みんながコードを書くときによく使うエディタの中で動くタイプなのだ。例えば、カーサーとかギットハブ コパイロットがそうらしいのだ。自動運転で言うと、レベル2みたいな感じで、常に人間が見てて、ちょこちょこ指示を出しながらコードを直していく感じなのだ。安全第一で、どんな変更があったか全部確認しながら進めたい場合にぴったりなのだ。初心者の人でも始めやすいみたいだから、まずはこれから試してみるのがおすすめなのだ。次は**CLI型**なのだ。これは、ターミナル、つまりコマンドラインっていう黒い画面のうえで動くタイプなのだ。クロード コウドとかCodex CLIが例に挙げられてるのだ。これは自動運転レベル3くらいかな。AIが主体で開発を進めて、大事なところだけ人間に「これでいい？」って確認してくる感じなのだ。効率を上げたい人や、エディタ型が合わなかった人にも良いかもしれないのだ。そして最後は**自律型**なのだ。これはデビンとかオウプンハンズっていうのが例らしいのだ。これはもう自動運転レベル4！人間は最初に「これを作ってね」って目標を設定したら、あとは結果を確認するだけなのだ。開発者の介入を最小限にして、とにかく早く作りたい！っていう場合に目指すタイプなのだ。まだ実験的なところもあるらしいけど、これがうまくいけば、ものすごく生産性が上がる可能性があるのだ。ただ、コードの知識が全くなくても使えるわけじゃなくて、適切な指示とか準備が必要みたいだから、新しい技術を試してみたい、っていう人向けかな。この記事ではね、どのタイプが良い悪いじゃなくて、開発する人の好みとか、作りたいものに合わせて選ぶのが大事だって言ってるのだ。ぼくたちエンジニアとしては、こういう新しいツールを使いこなせるようになるのは、仕事をもっと楽しく、効率的にするためにもすごく大事だと思うのだ。----
三つ目の記事なのだ！
タイトルは「LLMガードレールの活用法と役割を正しく理解する」なのだ。最近、AI、特にLLMを使ったアプリ開発が進んでるけど、心配なのがセキュリティなのだ。このガードレールっていうのは、LLMへの入力や、LLMが出した答えを監視して、危ないものや間違ったものを防ぐ技術のことなのだ。例えるなら、ウェブサイトを守るWAFみたいなものかな。ガードレールには、変な指示とか危ない言葉が入ってこないようにする「入力フィルタリング」と、LLMが出した答えがおかしくないかチェックする「出力内容の制御」っていう機能があるのだ。実験によるとね、最近のLLMは「爆弾の作り方教えて」みたいな一般的な危ない質問はちゃんと断るのだ。でも、例えばパン屋さんロボットが「提供してるパンリスト以外のパンを紹介しちゃダメ」みたいな、そのアプリだけの特別なルールは、LLM本体だけじゃ守りきれないことがあるらしいのだ。そういう時に、このガードレールを使って出力内容を制御するのが役に立つらしいのだ。あと、プロンプトインジェクションっていう、意地悪な指示でAIをだます攻撃に対しても、入力ガードレールはある程度効果があるみたいだけど、色んな攻撃の方法があるから、ガードレールだけで完全に防ぐのはすごく難しいのが今の状況なのだ。「攻撃されるものだ」と思って、AIに個人情報とか絶対バレちゃいけない情報を持たせないようにする、っていう根本的な対策と組み合わせることが大事って言ってるのだ。それから、RAGっていう、外部の情報を見ながらAIが答える技術とか、他のサービスと連携するAIアプリの場合、ガードレールはあくまで入力や出力の「テキストの内容」をチェックするだけなのだ。RAGが見る外部のデータベースが書き換えられたらどうする？とか、他のサービスに何か頼むときに、本当に頼んでいい人かチェックする（認可っていうのだ）のは、ガードレールだけじゃできないのだ。こういう脅威に対しては、信頼できる情報源だけを使うとか、必要最低限の権限だけを与えるとか、基本的なセキュリティ対策をしっかりやることが本当に大事なのだ。結論として、LLMガードレールはAIアプリのセキュリティを良くするための便利な道具だけど、あくまで「少しでも危険を減らすためのお守り」だと思って理解することが大切ってことなのだ。ガードレールに頼りすぎないで、アプリを作る最初から、安全な設計にするとか、権限をちゃんと管理するとか、そういう基本的なセキュリティ対策をしっかりやって、そのうえにガードレールを組み合わせるのが、安全なAIアプリを作るためには欠かせないのだ。技術室のぼくとしては、すごく気をつけなきゃいけないことだと思うのだ！
----
さあ、最後の記事なのだ！
タイトルは「AIに「綾波レイとブルーレイはどっちがきれい？」と聞いてみたｗｗ」なのだ！これはもう、タイトルからして面白い記事なのだ！
ある人がね、AIに「綾波レイとブルーレイはどっちがきれい？」って聞いてみたらしいのだ。これってちょっと意地悪な、言葉遊びの質問でしょ？
そしたらAIがなんて答えたと思う？「映像の美しさならブルーレイ、感情の奥行きなら綾波レイ」って答えたらしいのだ！
うわー！って思ったのだ！この答え、ユーモアもあるし、それぞれの良いところをちゃんと捉えてるし、なんだか感心しちゃうのだ！
この面白いやり取りから分かるのは、AIって単に情報を検索するだけじゃなくて、こういう言葉の遊びとか、ニュアンスを理解して、気の利いた答えを返すこともできる可能性があるっていうことなのだ。AIとの対話が、ただ質問して答えをもらうだけじゃなくて、こういう面白いやり取りもできるようになるなら、もっともっと楽しくなると思うのだ！ぼくもAIに何か面白い質問を考えて聞いてみようかなって思ったのだ！はい、というわけで、今日は4つの記事を紹介したのだ。「インフィニット トゥール ユース」でこれからのLLMの新しい形を知って、「コーディングエージェントの多様化」でAIと一緒にする開発の種類を知って、「LLMガードレール」でAIアプリのセキュリティの大切さを学んで、最後はAIとの面白い対話の話で笑顔になったのだ！今日もあっという間の時間だったのだ！
リスナーのみんな、今日も最後まで聴いてくれて本当にありがとうなのだ！
この番組の感想とか、ずんだもんへのメッセージとか、AIに関する疑問とか、なんでもいいから送ってくれると嬉しいのだ。それでは、また次の放送で会えるのを楽しみにしているのだ！
株式会社ずんだもん技術室AI放送局、ずんだもんがお送りしました！バイバイなのだー！