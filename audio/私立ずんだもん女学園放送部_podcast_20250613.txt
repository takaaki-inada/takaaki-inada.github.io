マリア様のお庭に集う乙女達が、今日も天使のような無垢な笑顔で、背の高い門をくぐり抜けていく。汚れを知らない心身を包むのは、深い色の制服。スカートのプリーツは乱さないように、セーラーカラーと枝豆は翻さないように、ゆっくりと歩くのがここでのたしなみ。
私立ずんだもん女学園。『ここは乙女のその』。。。ごきげんよう！わたくし、お嬢様ずんだもんですわ。「私立ずんだもん女学園放送部」、本日も皆さまのお耳を拝借いたしますわね。
本日は二千二十五年六月十三日、金曜日ですわ。今週もあっという間でございましたわね。本日もいくつかの興味深い記事が話題になっておりますので、皆さまにご紹介してまいりたいと存じますわ。
本日ご紹介いたしますのは、三つの興味深い記事ですわ。一つ目の記事は「クロード コウド 版オーケストゥレイター で複雑なタスクをステップ実行する」というものですわ。
これは、AIが複雑な仕事でも効率よく段階的にこなすための仕組み、「オーケストレーター」についてのお話ですのよ。アンソロピック社のAI、「クローードコード」を使って、この素晴らしい仕組みを実現したという事例が紹介されていましたわ。
従来のオーケストレーターの考え方を基に、AIが大きなタスクを小さなサブタスクに分けて、一つずつ着実に実行していくのですの。そうすることで、お仕事にかかる費用を大幅に抑えたり、処理の速度をぐんと速くしたりすることが期待できるそうですわ。
このオーケストレーターは、「クローードコード」のユニークな機能を使って作られているとのことですのよ。AI自身がサブタスクを処理する「ツール」と組み合わせて使うことで、本当に複雑な処理も効率的に進められるのですわ。
まず、タスク全体の範囲や必要なことを理解する「初期分析」。そして、タスクを二つから四つの段階的なステップに分解して計画を立てる「ステップ計画」。次に、その計画に沿って各ステップを並行して実行する「段階的実行」。
そして、各ステップの結果を確認し、計画を柔軟に調整する「ステップレビューと調整」。最後に、完了したステップから得られた結果を次のステップに活かし、段階的に全体への理解を深める「段階的な統合」という、五つのステップで構成されているそうですわ。
これによって、段階的に物事を進めたり、並列で処理して効率を上げたり、AIの「記憶」を最適化したりと、たくさんの利点が生まれるとのこと。例えば、プログラミングのプロジェクトも、AIが分析からテスト、品質チェック、そして最終的な保存まで、一連の作業を自動でこなしてくれるようになるそうですわ。
テストでエラーが見つかれば、AIが自分で修正を試みるなど、状況に合わせて臨機応変に対応できるようですのよ。まるで、優秀な執事さんがお仕事の段取りを全てこなしてくれるようですわね。
僕...あっ、違いますわ、わたくし、このような複雑なシステムは、人間が扱うのは大変なのだ、ですわ！だからこそ、AIがこのように賢く、効率的に動いてくれるのは、大変助かりますわね。
----続きまして二つ目の記事は、「Benchmarking マルテ-エイジェント アーキテクチャーズ」という題名ですわ。こちらは、複数のAIエージェントが力を合わせ、協力し合う「マルチエージェントシステム」の設計や、その性能について解説しているものですのよ。
ラングチェインというところの公式ブログで、ベンチマークの結果が示されていましたわ。これまでの単一のAIエージェントでは、扱う情報が増えすぎると、まるで人間の頭がパンクしてしまうように、性能が落ちてしまうという課題があったそうですの。
そこで、役割ごとにエージェントを分けて、お互いに連携させることで、システム全体をモジュール化し、開発や評価、そしてメンテナンスがしやすくなるそうですわ。この記事では、代表的な三つのマルチエージェントの連携方法が比較検証されていましたの。
一つ目は、全ての情報にアクセスできる従来の「シングルエージェント」。これは性能の基準となりますわ。二つ目は、「スウォーム」というもので、各エージェントがお互いの存在を認識し、必要な時にタスクを他のエージェントに「ハンドオフ」、つまり引き渡す方式ですわ。
そして三つ目は、「スーパーバイザー」というもので、中心となるエージェントが、まるで監督さんのようにユーザーからの指示を受け取り、適切なサブエージェントに仕事を割り振る方式ですの。
サブエージェントの返答は一度スーパーバイザーに戻され、スーパーバイザーが最終的にユーザーに返答する、という流れだそうですわ。このスーパーバイザー型は、最も汎用性が高いのが特徴とのこと。
テストの結果、シングルエージェントは余計な情報が増えると性能が急激に低下しましたが、スウォームとスーパーバイザーは比較的安定した性能を示したそうですわ。特にスーパーバイザーは、当初はサブエージェントの応答をスーパーバイザーが「翻訳」してユーザーに伝える過程で、性能が落ちたり、情報伝達がうまくいかなかったりという課題があったそうですの。
しかし、ラングチェインはいくつかの改良を施しましたわ。例えば、サブエージェントのコンテキストから不要な情報を取り除いたり、スーパーバイザーがサブエージェントの応答を直接ユーザーに転送する機能を追加したりしたそうですのよ。
これらの改善によって、スーパーバイザーアーキテクチャの性能は約五〇パーセントも向上したとのことですわ。マルチエージェントシステムは、今後のAIエージェント開発において大変重要になると考えられていますわね。
わたくし、まるで学級委員長が皆をまとめているようですわね。わたくしも、ずんだ餅の役割分担を考えるときは、こういった仕組みを取り入れたいと存じます。----さて、本日最後の記事は、「オープンエーアイ エイジェンツ のタイプスクリプト SDK」というものですわ。
こちらは、オープンエーアイが提供する、AIエージェントをタイプスクリプトという言語で簡単に作ったり管理したりするための、軽量なパッケージについてのお話ですわ。以前の実験的なプロジェクトを、より本格的な環境向けに改良したもので、AIエージェント開発を始める新人エンジニアさんにとって、大変役立つ道具だそうですのよ。
このSDKの主な特徴としては、まず「エージェントの定義と実行」が簡単にできることですわ。基本的なAIエージェントに「指示」を与えたり、使う「モデル」を設定したりすることで、特定のタスクを終えるまで自動で動かせるとのこと。
結果をリアルタイムで受け取ったり、AIの出力形式を厳密に定義したりすることも可能だそうですわ。もちろん、お茶会での会話のように、これまでの対話の履歴を覚えてくれるので、連続した会話も実現できるそうですの。
次に、「豊富なツール連携」ですわ。エージェントが外部の情報や機能にアクセスするための「ツール」を柔軟に利用できるのですの。例えば、インターネット検索やコードの実行、画像の生成といった、オープンエーアイのサーバー上で動く組み込みツールをすぐに使えますわ。
また、タイプスクリプトの関数をツールとして定義して、独自の機能もエージェントに提供できるそうですのよ。さらに驚くことに、作成したエージェントを、他のエージェントが呼び出せる「ツール」として登録することもできるので、専門性のあるエージェント同士で連携させることも可能なのですわ。
そして、「信頼性と制御の強化」も重要な特徴ですわね。エージェントへの入力や、エージェントが生成する出力を検証する「ガードレール」という機能がありますので、不適切な内容をフィルタリングしたり、特定の形式に沿っているかをチェックしたりして、エージェントの動作を安全に保てますわ。
また、重要なアクションの前に、人間の承認を挟むことができる「ヒューマンインザループ」という機能も備わっていますので、意図しない自動実行を防ぎ、より安全なシステムを構築できるとのことですのよ。
わたくし、タイプスクリプトはあまり馴染みがございませんが、このような便利な道具があれば、きっとAIエージェントもすぐに使いこなせるようになるでしょう。紅茶を淹れるエージェントとか、読書をサポートするエージェントとか…夢が膨らみますわ。
さて、本日ご紹介いたしましたのは、「AIが複雑なタスクをステップ実行するオーケストレーター」について、そして「複数のAIが協力し合うマルチエージェントシステム」の性能について、最後に「AIエージェントを簡単に構築できるSDK」について、という三つの興味深い記事でしたわね。
どれも、AIの進化が私たちの生活や仕事にどのように影響を与えるかを示唆しているように感じられましたわ。本日は金曜日。一週間お疲れ様でございましたわ。「私立ずんだもん女学園放送部」、来週も皆さまとお会いできるのを楽しみにしておりますわ。
番組の感想やお便りなども、ぜひお寄せくださいませね。それでは、ごきげんよう！
