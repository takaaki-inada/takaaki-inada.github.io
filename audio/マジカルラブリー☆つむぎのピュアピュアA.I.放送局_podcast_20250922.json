[
    {
        "type": "title",
        "title": "マジカルラブリー☆つむぎのピュアピュアA.I.放送局",
        "date": "2025.09.22",
        "notes": "こんちにわー！毎週月曜日はあーし、埼玉ギャルの春日部つむぎがお届けする「マジカルラブリー☆つむぎのピュアピュアA.I.放送局」！今日も元気にいくよー！今日わ2025年9月22日、月曜日！",
        "slidenum": 0,
        "start_ms": 0,
        "end_ms": 35119
    },
    {
        "type": "content",
        "title": "今週のテーマ",
        "points": [
            "AIの最先端トレンドをJKにもわかりやすく解説",
            "新人エンジニアさんにも役立つお仕事のヒント",
            "ちょっと考えさせられるテクノロジーと社会の話"
        ],
        "notes": "ちょっと涼しくなってきたけど、みんな元気にしてるかな？あーしわ今日も元気いっぱい！今週も、AIとかテクノロジーのトレンド記事を、あーしがJKにもわかりやすく、かわちく解説しちゃうから、最後まで付き合ってね！",
        "slidenum": 1,
        "start_ms": 35119,
        "end_ms": 51500
    },
    {
        "type": "content",
        "title": "本日お伝えすること",
        "subhead": "今日のA.I.放送局で紹介する4つの記事",
        "points": [
            "Server Less Code Moreキーノートレポート",
            "AIエージェントのための決済プロトコル(AP2)",
            "AIエージェント活用とコードレビューの重要性",
            "テストデータと歴史的背景への配慮"
        ],
        "notes": "今日わ、全部で4つの記事を紹介していくよ！どれもAIの最先端の話だったり、エンジニアのお仕事で大事なことだったり、なんかちょっと考えさせられちゃう記事もあるから、最後まで聞いてね！",
        "slidenum": 2,
        "start_ms": 51500,
        "end_ms": 65674
    },
    {
        "type": "section",
        "title": "Server Less Code Moreキーノートレポート",
        "sectionNo": 1,
        "url": "https://qiita.com/har1101/items/49745c0a15b0b1f8d6ea",
        "notes": "----じゃあ、早速一つ目の記事いくよ！タイトルわ、「サーバー レス コウド モアキーノートレポート【サーバーレスデイズ 2025】」だって！なんか難しそうなタイトルだけど、要するにね、AIエージェントってのをサーバーレスって呼ばれる場所で作る時の大事なポイントを、新人エンジニアさん向けに説明してるんだって！",
        "slidenum": 3,
        "start_ms": 65674,
        "end_ms": 90824
    },
    {
        "type": "content",
        "title": "AIエージェントの進化を加速させた転換点",
        "subhead": "Claude 3.5 Sonnetと「ToolUse」の登場",
        "points": [
            "LLMが外部ツールと連携可能に (ファイルの読み書きなど)",
            "AIが自律的にコードを書く[[コーディングエージェント]]の原型が誕生",
            "AIエージェント開発の可能性が大きく広がる"
        ],
        "notes": "最近のAIって、まじ進化がやばいよね！特に「クロードさんてんごソネット」とか、「ツールユーズ」ってのが出てきてから、AIが自分でファイルを読んだり書いたり、なんか外部のツールとも連携できるようになっちゃったんだって！これって、AIが勝手にコード書いちゃう「コーディングエージェント」の原型ができたってことらしくて、もうAIにできないことってあるのかな？って感じだよね！",
        "slidenum": 4,
        "start_ms": 90824,
        "end_ms": 107707
    },
    {
        "type": "content",
        "title": "サーバーレスとAIのシンプルな組み合わせ",
        "subhead": "固定概念にとらわれないアーキテクチャの選択",
        "twoColumn": true,
        "points": [
            "Amazon BedrockのようなAIサービスとネイティブアプリを**直接連携**",
            "従来の「API Gateway + Lambda」が必須ではない",
            "[[「これこそサーバーレス」]]と言えるシンプルな構成が実現可能に"
        ],
        "notes": "んでね、サーバーレスって、なんかサーバーいらないってこと？って感じだけど、AIと組み合わせるとめちゃくちゃシンプルになるんだって！スマホのアプリとAIサービスを直接繋げちゃうイメージなんだって。もう、エーピーアイゲートウェイとかラムダとか、なんか色々挟まなきゃいけないって思い込んでたけど、もっとシンプルにできる方法があるんだって！マジで目からウロコ！",
        "slidenum": 5,
        "start_ms": 107707,
        "end_ms": 133580
    },
    {
        "type": "headerCards",
        "title": "サーバーレス開発 普遍の3大原則",
        "subhead": "AIエージェント開発においても非常に重要な指針",
        "columns": 3,
        "items": [
            {
                "title": "1. 関数単位での設計",
                "desc": "各機能を独立した関数として設計し、どこでも動かせるようにする"
            },
            {
                "title": "2. ステートレス",
                "desc": "処理コンピューターに状態を保存せず、DBなど外部にデータを保存"
            },
            {
                "title": "3. イベントドリブン",
                "desc": "特定のイベントをきっかけに処理が自動的に開始されるようにする"
            }
        ],
        "notes": "あとね、サーバーレスで開発する時に大事な3つの原則があるんだって！一つめが「関数単位での設計」。これは、アプリの機能ごとに独立した小さいパーツとして作っとくってことらしい。なんか、レゴブロックみたいに、一個一個のブロックがちゃんと機能するように作っとく感じ？二つめが「ステートレス」。これはね、データを処理するコンピューターに直接保存しないで、データベースみたいな外の場所に置いとくってこと。自分の部屋に散らかさないで、ちゃんと専用の棚にしまう、みたいな？で、三つめが「イベントドリブン」。これは、なんか特定のことが起こったら、自動で処理が始まるようにするってこと。例えば、友達からLINEが来たら、自動で返信しちゃう、みたいな？まあ、それわちょっと違うか。これ、AIエージェントの開発でもめっちゃ大事なんだって！",
        "slidenum": 6,
        "start_ms": 133580,
        "end_ms": 199761
    },
    {
        "type": "compare",
        "title": "LLM単体の弱点とそれを克服する技術",
        "leftTitle": "LLMの制約",
        "rightTitle": "アプリケーション側の工夫",
        "leftItems": [
            "最新情報に詳しくない (ナレッジカットオフ)",
            "外部システムを直接操作できない",
            "以前の会話内容を覚えていない (ステートレス)"
        ],
        "rightItems": [
            "システムプロンプト (目的・役割の指示)",
            "会話履歴の管理と引き渡し",
            "RAG (外部DB/文書を参照し知識を補う)"
        ],
        "notes": "AIってすごいけど、なんか古い情報しか知らないとか、前の会話を覚えてないとか、ちょっと残念なところもあるんだよね。だから人間が、「システムプロンプト」とか「アールエージー」とかいうので、AIにヒントをあげたり、知識を補ってあげたりするんだって。だけど、それでもAIだけじゃ限界があるから、そこで「AIエージェント」が必要になるんだね！",
        "slidenum": 7,
        "start_ms": 199761,
        "end_ms": 224151
    },
    {
        "type": "quote",
        "title": "キーノートの重要なメッセージ",
        "text": "AIエージェントはアプリケーションである",
        "author": "ServerlessDays 2025 キーノートより",
        "notes": "このキーノートで一番大事なメッセージわ、「AIエージェントはアプリケーションである」ってことなんだって。AIってなんか特別なものに思えるけど、実はいつものソフトウエア開発の延長線上にあるんだって！",
        "slidenum": 8,
        "start_ms": 224151,
        "end_ms": 234151
    },
    {
        "type": "content",
        "title": "大規模AIエージェント開発の課題と解決策",
        "subhead": "AWS Strands Agents SDKの活用",
        "points": [
            "**課題**: 認証・認可、メモリ管理、監視、エラーハンドリングなど複雑な要素",
            "**解決策**: 状態をDynamoDB等に保存し、Lambdaのステートレス性を維持",
            "ロジックやツールは[[再利用可能な独立した関数]]として設計",
            "最終的に、従来のサーバーレス構成にLLMサービスが加わる形になる"
        ],
        "notes": "大規模なAIエージェントを開発する時わ、なんか認証とかメモリとか、色んなことを考えなきゃいけなくて大変そうだけど、エーダブリューエスの「ストランズエージェンツエスディーケー」っていうのを使うと、それがちょっと楽になるらしいよ！",
        "slidenum": 9,
        "start_ms": 234151,
        "end_ms": 244151
    },
    {
        "type": "content",
        "title": "これからのエンジニアに求められる力",
        "subhead": "普遍的な原則に基づき、課題を機能に落とし込む",
        "points": [
            "生成AI時代でも、サーバーレスの3原則は引き続き重要",
            "業務課題を[[AIエージェントの機能として具体的に落とし込む]]力",
            "それを実現する[[ソフトウェアを構築する]]力"
        ],
        "notes": "要するに、AIが当たり前の時代になっても、結局わ、この「関数単位」「ステートレス」「イベントドリブン」っていう基本的な考え方がめっちゃ大事で、人間がAIエージェントの機能をちゃんと考えて作れる力が、これからも求められるってことだね！あーしも、ずんだもん先輩のとこでAIのこともっと勉強しなきゃ！",
        "slidenum": 10,
        "start_ms": 244151,
        "end_ms": 286457
    },
    {
        "type": "section",
        "title": "AIエージェントのための決済プロトコル(AP2)",
        "sectionNo": 2,
        "url": "https://azukiazusa.dev/blog/trying-agent-payments-protocol-ap2",
        "notes": "----次、二つ目の記事いくね！タイトルわ、「AI エージェントのためのエイジェント ペイメンツ プロトコル (AP2)を試してみた」だって！これわね、AIエージェントが、私たちに代わってお金を払う時の話だよ！",
        "slidenum": 11,
        "start_ms": 286457,
        "end_ms": 304973
    },
    {
        "type": "content",
        "title": "AIエージェントとお金の問題",
        "subhead": "便利だけど「決済」にはセキュリティや信頼性の課題",
        "points": [
            "旅行計画やスケジュール調整など、AIエージェントは非常に便利",
            "しかし、宿泊施設の予約やフライト購入といった決済はまだ人間が実施",
            "理由は[[不正な請求や詐欺のリスク]]が懸念されるため"
        ],
        "notes": "最近さ、AIエージェントが旅行の計画立ててくれたり、カレンダー見てスケジュール組んでくれたり、めっちゃ便利になってるじゃん？でも、ホテル予約したり、飛行機のチケット買ったりって、お金が絡むことわ、やっぱりまだ人間がやってるよね？だって、もしAIが勝手に決済しちゃったら、不正請求とか詐欺とか、めっちゃ心配になるもんね！",
        "slidenum": 12,
        "start_ms": 304973,
        "end_ms": 330613
    },
    {
        "type": "content",
        "title": "Googleが提案する新技術「Agent Payments Protocol (AP2)」",
        "subhead": "AIエージェントが安全に決済を行うための通信規約",
        "points": [
            "核となる仕組みは[[「Mandates(マンデート)」]]と呼ばれるデジタル契約",
            "改ざん防止機能付きの暗号化された契約で信頼性を担保",
            "既存のAIエージェント間通信プロトコルを拡張して利用可能"
        ],
        "notes": "そんな課題を解決するために、グーグルが「エーピーツー」っていう新しい技術のルールを提案したんだって！これがあれば、AIエージェントが安全に、私たちに代わって決済できるようになるんだって！すごくない？エーピーツーのポイントわ、「マンデート」っていう、なんか改ざんできないようにしたデジタル契約なんだって！これがあるから、AIが勝手に変なことできないように、信頼してお支払いできるってことだね！",
        "slidenum": 13,
        "start_ms": 330613,
        "end_ms": 360860
    },
    {
        "type": "compare",
        "title": "Mandatesの主な2つの利用シーン",
        "leftTitle": "リアルタイム購入 (人間が指示)",
        "rightTitle": "委任タスク (人間が不在)",
        "leftItems": [
            "ユーザーが「新しい靴を探して」のように直接指示",
            "購入意図を記録した「Intent Mandate」を生成",
            "商品決定後、ユーザーが確認・承認して「Cart Mandate」に署名"
        ],
        "rightItems": [
            "「チケット発売されたら買って」のように事前にタスクを委任",
            "ユーザーは詳細な条件を記述したIntent Mandateに**事前署名**",
            "条件が満たされたらエージェントが自動でCart Mandateを生成・購入"
        ],
        "notes": "マンデートには、主に二つの使い方があるんだって。一つめわ、「リアルタイム購入」！これは、例えば「新しいランニングシューズ探して！」って人間がAIに直接お願いする時だね。AIが商品を見つけたら、人間がちゃんと「これでいいよ！」って確認してサインするんだって。もう一つわ、「委任タスク」！これは、「コンサートのチケットが発売されたら、すぐに買って！」みたいに、事前にAIにタスクを任しとく場合だね。この時も、人間が「この条件なら買っていいよ」っていうのを事前にマンデートにサインしとくんだって。だから、人間がその場にいなくても、AIがちゃんとルール通りに買ってくれるってこと！マジ便利じゃん！",
        "slidenum": 14,
        "start_ms": 360860,
        "end_ms": 400636
    },
    {
        "type": "content",
        "title": "安全な決済が拓くAIエージェントの未来",
        "subhead": "実社会のお金のやり取りにまで踏み込むための重要な技術基盤",
        "points": [
            "AP2はまだ提案段階だが、将来的な普及が期待される",
            "AIエージェントが様々な専門エージェントと協力し、決済を完結",
            "[[信頼とセキュリティを確保]]し、AIの活用範囲を広げる"
        ],
        "notes": "このエーピーツーわ、まだ提案されたばっかりの技術なんだけど、これからAIがもっと色んなところで活躍していくためにも、こういう安全に決済できる仕組みって、めっちゃ大事だよね！あーしも将来、AIに最新のカレーパン買いに行かせたいなー！",
        "slidenum": 15,
        "start_ms": 400636,
        "end_ms": 425314
    },
    {
        "type": "section",
        "title": "AIエージェント活用とコードレビューの重要性",
        "sectionNo": 3,
        "url": "https://www.seangoedecke.com/ai-agents-and-code-review/",
        "notes": "----どんどんいくよ、三つ目の記事！タイトルわ、「\nIf you are good at code review,you will be good at using AI agents\n」だって！これわね、AIエージェントをうまく使うには、「コードレビュー」っていうスキルがめっちゃ大事だよって話なんだ！特に新人エンジニアさん、注目だよ！",
        "slidenum": 16,
        "start_ms": 425314,
        "end_ms": 436823
    },
    {
        "type": "content",
        "title": "AIは「熱心だが経験の浅いジュニアエンジニア」",
        "subhead": "大量のコードを素早く生成できるが、深い判断力はまだない",
        "points": [
            "AIに任せっぱなしにすると、[[非効率・手戻りの多い「良くない設計」]]に固執する可能性",
            "例: データ取得で遠回りしたり、過剰に複雑な仕組みを提案",
            "人間が定期的に軌道修正してあげる必要がある"
        ],
        "notes": "AIって、コードをめっちゃ速く作れるんだけど、なんか人間のエンジニアさんみたいな深い判断力わ、まだないんだって！だから、AIに全部任せっぱなしにしちゃうと、効率が悪かったり、後でやり直しになっちゃったりするような、イマイチな設計になっちゃうことがあるらしいよ。記事にもね、AIがなんか遠回りしたり、必要以上に複雑なものを作ろうとしちゃった例が載ってたんだって。AIって、「やる気わあるけど、まだ経験の浅い新人エンジニア」みたいな感じだから、人間がちゃんと見て、軌道修正してあげる必要があるんだね！",
        "slidenum": 17,
        "start_ms": 436823,
        "end_ms": 476624
    },
    {
        "type": "compare",
        "title": "AIとの協業におけるコードレビューのあり方",
        "leftTitle": "良いレビュー (構造的視点)",
        "rightTitle": "良くないレビュー",
        "leftItems": [
            "書かれたコードだけでなく「もっと良い設計はなかったか」を問う",
            "機能がどこに、どう実装されるべきかを考える**大きな視点**",
            "既存システムの再利用や、よりシンプルな方法を模索する"
        ],
        "rightItems": [
            "**あら探し型**: 表記揺れなど細部にこだわり、大きな設計ミスを見逃す",
            "**何でも承認型**: AIの生成物を鵜呑みにし、誤った判断をそのまま取り込む"
        ],
        "notes": "じゃあ、どんなコードレビューのスキルが役に立つかっていうとね、「書かれたコード」だけじゃなくて、「もっと良い設計や実装はなかったかな？」っていう「構造的な視点」を持つことが大事なんだって！コードの細かい間違いを探すだけじゃなくて、もっと全体を見て、「これって、そもそもこのやり方でいいの？」って考えることなんだって。うわー、それ、まじ難しそう…あーし、ずんだもん先輩のレポートの誤字脱字わ見つけられるけど、研究内容の根本的な問題とかわちょっと…。でも、そういう大きな視点で考える力が、AIを正しい方向に導く鍵になるんだって！逆に、コードの細かい表現の違いとかにこだわりすぎたり、AIが作ったものをそのまま「はい、OK！」ってしちゃうレビューわ、AIとの仕事には向いてないんだって。前者の「あら探し型」だと、AIの大きなミスを見逃しちゃうし、後者の「何でも承認型」だと、AIの間違った判断をそのまま使っちゃうリスクがあるからだね！",
        "slidenum": 18,
        "start_ms": 476624,
        "end_ms": 544424
    },
    {
        "type": "quote",
        "title": "AIとの協業は「セントール・チェス」に似ている",
        "text": "AIが生成したコードや設計案が適切かどうかを評価する、人間の「コードレビュー力」、特に「構造的な思考力」が、AIツールを最大限に活かすために不可欠である",
        "author": "記事の結論より",
        "notes": "結論としてわね、AIエージェントを使うことって、人間とコンピューターが協力してチェスをする「セントール・チェス」っていうのに似てるんだって。AIが最強のコードとか設計案を作ってくれるけど、それが本当に適切かどうかを評価して、最適な一手を決めるのは、やっぱり人間の「コードレビュー力」、特に「構造的に考える力」がめっちゃ大事ってことだね！",
        "slidenum": 19,
        "start_ms": 544424,
        "end_ms": 586606
    },
    {
        "type": "content",
        "title": "これからのエンジニアとAIの関係",
        "subhead": "AIを単なる道具ではなく、パートナーとして導く",
        "points": [
            "人間の[[構造的な思考力]]がAIを最大限に活かす鍵",
            "AIを上手に導くパートナーシップが求められる"
        ],
        "notes": "AIをただの道具として使うだけじゃなくて、パートナーとしてうまく導くことが、これからのエンジニアさんには求められるんだって！あーし、技術室でずんだもん先輩のコード、ちょっとレビューしに行ってこよっかなー。まあ、ほとんど意味わかんないんだけどね！",
        "slidenum": 20,
        "start_ms": 586606,
        "end_ms": 604714
    },
    {
        "type": "section",
        "title": "テストデータと歴史的背景への配慮",
        "sectionNo": 4,
        "url": "https://posfie.com/@petaritape/p/s5Kj5VU",
        "notes": "----さて、今日紹介する最後の記事いくよ！タイトルわ、「航空管制のシステム開発してるときに、『手なりで作っちゃいそうになるけど、ダミー便でJAL123だけは作るなよ』と口酸っぱく言われた新卒時代の思い出→『実際にJALがやらかして怒られてる』『123とかつい作りそうになる』」だって！これわね、ちょっと考えさせられる話なんだ。",
        "slidenum": 21,
        "start_ms": 604714,
        "end_ms": 630533
    },
    {
        "type": "quote",
        "title": "航空管制システム開発現場の教え",
        "text": "手なりで作っちゃいそうになるけど、ダミー便でJAL123だけは作るなよ",
        "author": "ある新卒時代の思い出より",
        "notes": "飛行機ってさ、管制システムで安全に空を飛んでるんだけど、そのシステムを開発する現場ではね、「JAL123」っていう便名を、テスト用のダミーデータとして絶対に使っちゃダメだよって、めちゃくちゃ言われるらしいんだ。",
        "slidenum": 22,
        "start_ms": 630533,
        "end_ms": 646659
    },
    {
        "type": "content",
        "title": "なぜ「JAL123」は使ってはいけないのか",
        "subhead": "1985年の日航機墜落事故の教訓",
        "points": [
            "1985年に発生した[[日本航空123便墜落事故]]という歴史的背景",
            "テストデータとして安易に連番(1, 2, 3)を選びがちだが、配慮が必要",
            "実際にJAL社自身がテストで「JAL123」を使用し問題になった事例も"
        ],
        "notes": "なんでかっていうと、1985年に大きな墜落事故があったのが「JAL123便」だったからなんだよね。ついね、テストデータって、1、2、3って連番にしたくなっちゃう気持ちわ、わかるんだけど、そういう歴史的なこととか、悲しい出来事を忘れちゃいけないってことだよね。記事にもね、実際にジャルさん自身が、テストで「JAL123」を使っちゃって、怒られた事例もあるんだって！",
        "slidenum": 23,
        "start_ms": 646659,
        "end_ms": 669386
    },
    {
        "type": "content",
        "title": "エンジニアが心に留めるべきこと",
        "subhead": "過去の教訓から学び、社会への影響を意識した開発",
        "points": [
            "安易な連番が、歴史的背景や社会への配慮を欠くことがある",
            "テストデータ一つにも、[[人の気持ちを考える]]想像力が重要",
            "技術だけでなく、社会的な配慮もエンジニアの責任"
        ],
        "notes": "これって、エンジニアさんのお仕事だけじゃなくて、色んなことに言える気がするよね。なんか、安易に連番とかでデータ作っちゃうと、思いがけないところで、過去の教訓とか社会への配慮を欠いちゃうことがあるってことだもんね。あーしとかも、SNSとかで適当な言葉使わないように、気をつけなきゃなって改めて思ったもん。だって、あーし、やんちゃに見えて実は真面目だからね！なんか、人の気持ちを考えて行動することって、どこでも大事だなって思ったよ！",
        "slidenum": 24,
        "start_ms": 669386,
        "end_ms": 712214
    },
    {
        "type": "headerCards",
        "title": "今日のまとめ",
        "subhead": "AIエージェントの今と、私たちが考えるべきこと",
        "columns": 2,
        "items": [
            {
                "title": "AIエージェントの作り方",
                "desc": "サーバーレスの3原則に基づき、アプリケーションとして構築"
            },
            {
                "title": "AIと決済の未来",
                "desc": "AP2のようなプロトコルが安全な決済を可能に"
            },
            {
                "title": "AIを使いこなす力",
                "desc": "AIを導くための、人間の構造的なレビュー力が重要"
            },
            {
                "title": "開発と社会への配慮",
                "desc": "テストデータ一つにも歴史や人の気持ちを考える視点"
            }
        ],
        "notes": "----ってことで、今日もあっという間にお時間だね！今日わ、「AIエージェントってどう作っていくの？」って話から、「AIにお金を払わせる技術」、そして「AIを使いこなすための人間の力」、最後わ「歴史の教訓とテストデータ」って、色んな話を紹介したよ！どれも、これからの未来を考える上で、大事なことだったんじゃないかな！",
        "slidenum": 25,
        "start_ms": 712214,
        "end_ms": 733076
    },
    {
        "type": "content",
        "title": "マジカルラブリー☆つむぎのピュアピュアA.I.放送局",
        "points": [
            "みんなからの感想やメッセージ、いつでも待ってるよ",
            "これからもJK目線でテクノロジーをわかりやすく伝えていくよ",
            "また聞いてね"
        ],
        "notes": "この番組「マジカルラブリー☆つむぎのピュアピュアA.I.放送局」でわ、みんなからの感想とかメッセージを、いつでも待ってるよ！これからも、あーしがJK目線でテクノロジーをわかりやすく伝えていくから、ぜひまた聞いてね！",
        "slidenum": 26,
        "start_ms": 733076,
        "end_ms": 758522
    },
    {
        "type": "closing",
        "notes": "それじゃあ、またねー！ばいばーい！",
        "slidenum": 27,
        "start_ms": 758522,
        "end_ms": 768522
    }
]