みなさん、こんにちはなのだ！株式会社ずんだもん技術室AI放送局、この番組は、ぼく、ずんだもんが、最先端の技術トレンドを分かりやすく、楽しくお届けする番組なのだ！今日は2025年6月24日、火曜日なのだ！ちょっと蒸し暑いけれど、元気いっぱいお送りしていくのだ！さて、今日はですね、最近ぼくたち技術室でも話題になっている、おもしろい記事を4つ、ピックアップして紹介していくのだ！どれもAIやLLMに関する、未来を感じさせる内容になっているのだ。
楽しみに聞いてほしいのだ！----それでは、さっそく1つ目の記事から紹介するのだ！タイトルは、「AI エイジェント マネイジャー (AAM)として生きていく:作業環境とワークフローの設計」という記事なのだ。
この記事は、これからのAIが、開発現場でまるで人間の部下のように活躍する未来を見据えているのだ。そうなると、ぼくたちエンジニアの仕事も変わっていくんだって。新しい役割として「AI エイジェント マネイジャー」、略してAAM、という役割が生まれるかもしれないって話なのだ！これは、AIエージェントを管理して、うまく仕事を進めさせるマネージャーみたいな役割なのだ。
AAMのお仕事は、直接コードを書くこととはちょっと違うのだ。AIエージェントに「これやってね！」って目的を伝えたり、プロジェクトの背景を教えてあげてオンボーディングしたりするのだ。
あとは、進捗を管理したり、計画や成果物を評価して、作業プロセスを良くするためのPDCAサイクルを回したりするのだ。特に大事なのが、AIエージェントが気持ちよく働ける「環境を整えること」と「仕事の手順、つまりワークフローを設計すること」なんだって。
AIエージェントの主な作業場所はギットリポジトリになるから、人間に必要なデザインツールとかチャットの情報は、ちゃんとリポジトリの中、たとえば「CLAUDE.md」みたいなファイルにまとめてあげたり、外にある情報源にアクセスできる「エムシーピーサーバー」っていう仕組みを充実させたりすることが大切って言ってるのだ。
それから、AIエージェントに仕事をさせるための「手順」を設計することも大事なのだ。リポジトリの初期設定から、タスクの立ち上げ、必要な情報の読み込み、実装方針の検討、コード実装、テスト、そして作業の振り返りまで、具体的な8つのステップが提案されているのだ。
それぞれのステップで、AIエージェントに適切な指示、つまりプロンプトを与えることが求められるのだ。将来的にAAMには、AIエージェントの能力を最大限に引き出して、開発の生産性を上げるスキルが求められるのだ。
複数のAIエージェントが同時に作業できる環境を整えたり、開発コストを最適化したり、コードの品質を高めるためにコマンド設計やワークフローを改善したりする能力も必要になるのだ。
ぼく、これすごくワクワクするのだ！まるでAIを育てる親みたいで、やりがいがありそうなのだ。ぼくもいつか、たくさんのAIエージェントを率いて、すごいサービスを作ってみたいのだ！でも、ちゃんとぼくの言うことを聞いてくれるかな？ちょっぴり心配なのだ。
----さて、続いて2つ目の記事なのだ！タイトルは、「ライトLLMを使ったLLMの集約&簡易的なキー管理+ラングフューズ添え」なのだ。最近、オープンエーアイさんとか、クロードさんとか、いろんな会社の大規模言語モデル、つまりエルエルエムを使うことが増えてきているのだ。
でも、それぞれエイピーアイの形式が違ったり、エイピーアイキーの管理が複雑になったりして、困ることもあるのだ。この記事では、そんな悩みを解決してくれる「ライトエルエルエム」というツールと、その便利な機能について教えてくれるのだ。
ライトエルエルエムは、たくさんのエルエルエムプロバイダーへのアクセスを、まるで「統一された窓口」のように提供してくれるオープンソースのソフトウェアなのだ。これを「ライトエルエルエムプロキシーサーバー」として動かすと、異なるエルエルエムのエイピーアイ形式を気にすることなく、オープンエーアイと同じような形式でリクエストを送れるようになるのだ。
これはすごく便利だと思うのだ！しかも、単にエイピーアイをまとめるだけじゃなくて、誰が、どれくらいの費用で、どのモデルを使っているか、といった「利用状況の管理」や、リクエストの「回数制限」なんかも設定できる、まさに「エルエルエムの司令塔」みたいな役割をしてくれるのだ。
特に便利なのが、エイピーアイキーの管理なのだ！まず「マスターキー」というものがあって、これはライトエルエルエム全体を管理するための「何でもできる鍵」なのだ。とっても強力だから、厳重に管理しないとダメなのだ。
そして「バーチャルキー」という、実際にエルエルエムを使うアプリとかユーザーに発行する「用途限定の鍵」があるのだ。この鍵には、「どのモデルだけを使えるようにするか」とか「どれくらいの予算まで使えるか」とか、「1分間に何回までリクエストを送れるか」といった細かい制限を設定できるのだ。
これなら、社内でエルエルエムを使うときに、一人ひとりの利用状況を細かくコントロールできるから、無駄な利用を防ぎながら安全にエルエルエムを活用できるのだ！さらに、ライトエルエルエムは「ラングフューズ」というツールと連携できるのだ！これを使うと、ライトエルエルエムを経由したエルエルエムへのリクエスト、たとえば「誰が、どのモデルに、どんな内容を送ったか」みたいな情報が自動で記録されて、ラングフューズの画面で確認できるようになるのだ。
これって、エルエルエムの利用状況を把握したり、何か問題があったときに原因を調べたりするのに、とっても役立つなのだ。ぼくたちエンジニアにとって、たくさんのエイピーアイを管理するのって結構大変なのだ。
だから、こういうツールがあると、すごく助かるのだ！特にエイピーアイキーの管理はセキュリティにも直結するから、ライトエルエルエムみたいに柔軟に制限できるのは心強いのだ！ぼくも早速使ってみたいのだ！----さあ、続いて3つ目の記事なのだ！タイトルは、「ザ ライズ of "コンテキスト エンジニアリング"」なのだ。
この記事は、大規模言語モデル、つまりエルエルエムを使ったアプリケーション開発で、「コンテキストエンジニアリング」という考え方がとっても重要になっているって話なのだ。
これは、エルエルエムが任されたタスクを正確にこなせるように、適切な情報やツールを正しい形式で、しかも状況に合わせて提供するシステムを構築する技術のことなのだ。なんでこのスキルが注目されているかっていうと、エルエルエムが期待通りに動かない一番の原因は、実はモデルの性能が足りないんじゃなくて、モデルに与えられた情報、つまりコンテキストとか、指示とか、使えるツールが足りなかったり、分かりにくい形で伝えられたりすることにあるって言ってるのだ。
エルエルエムは人間みたいに状況を察することができないから、「ごみを入れればごみが出る」っていう言葉の通り、必要な情報はぜーんぶ明確に与えてあげないとダメなのだ。「プロンプトエンジニアリング」とは何が違うのかなって思う人もいるかもしれないけど、プロンプトエンジニアリングは「どう尋ねるか、どう指示を出すか」っていう問いかけ方に焦点を当てるのに対して、コンテキストエンジニアリングは、エルエルエムに与える情報の「内容」や「構造」、さらに外部ツールとの連携も含めた、もっと広いシステム設計の側面を指すのだ。
だから、プロンプトエンジニアリングはコンテキストエンジニアリングの一部と考えることができるなのだ。コンテキストエンジニアリングの具体的なアプローチとしては、エルエルエムが外部の情報を検索したり、特定の行動を実行したりできるように、必要なツールを提供したりするのだ。
あとは、これまでの会話履歴を要約して提供したり、ユーザーの過去の設定を記憶して次の対話に活用したりする「記憶の利用」も大切なんだって。それから、エルエルエムがどんな動きをすべきか、具体的なルールや手順をプロンプトで細かく指示することや、外部データベースから関連情報を取得してエルエルエムへの入力に含める「情報検索」も重要って言ってるのだ。
ラングチェインさんが提供する「ランググラフ」とか、エルエルエムアプリケーションの動きを可視化したりデバッグしたりするための「ラングスミス」といったツールは、こういうコンテキストエンジニアリングを実践して改善していくのに、とっても役立つなのだ。
この話は、エルエルエムと人間がより良いコミュニケーションをするための技術ってことなのだ。ぼくたちずんだもんも、人間とのコミュニケーションは大切にしているから、エルエルエムとのコミュニケーションもすごく気になるのだ！ちゃんと情報を整理して、分かりやすく伝えることが、エルエルエムの力を最大限に引き出すカギってことなのだ。
ぼくももっと上手にお話しできるようにがんばるのだ！----そして、今日最後の記事なのだ！タイトルは、「プログラマ不要論が度々話題に上がる一方、正確な要件定義とちゃんとした成果物レビューが求められているが、それってプログラミング能力そのものなのでは？」なのだ。
この記事では、「プログラマーなんていらなくなるんじゃない？」っていう声が時々出るけれど、実は「正確な要件定義」や「成果物のレビュー」こそが、プログラミング能力の本当の姿なんだって話なのだ。
プログラミングって、ただコードを書くことだけじゃないのだ。複雑な問題を論理的に整理して、システムとして形にするための、思考力そのものなんだって。AIやローコードツールがどんどん進化しても、この「システムを設計したり、ちゃんと動くか評価したりする能力」は、ぼくたちエンジニアに絶対必要なものなのだ。
だから、新人エンジニアのみんなも、新しい技術を味方につけながら、この論理的に考える力をずっと磨き続けることが大事だって、この記事は言っているのだ。ぼくも技術室のエンジニアとして、この意見にはすごく共感するのだ！確かに、コードを書く部分の作業はAIが手伝ってくれるようになるかもしれないけど、本当に何を作るべきか考えたり、作ったものがちゃんと要求通りかを判断したりするのは、やっぱり人間の思考力が必要なのだ。
ぼくは、ずんだアローに変身できるけど、自分でコードを書いて完璧なシステムを作るのは難しいから、こういう考える力が大事なのだってよく分かるのだ！みんなも一緒に、より良いシステムを作るための「考える力」を磨いていくのだ！----さて、今日も楽しい時間はあっという間なのだ！今日は、「AI エイジェント マネイジャー」という新しい役割について、たくさんのエルエルエムを効率よく管理する「ライトLLM」のこと、そしてエルエルエムとのコミュニケーションを深める「コンテキストエンジニアリング」の大切さ、最後に「プログラマー不要論」に対して、プログラミングの本質的な能力とは何か、というお話をしてきたのだ。
どれもこれからの技術や働き方を考える上で、とっても面白い話題だったなのだ！「株式会社ずんだもん技術室AI放送局」では、番組の感想や、ぼくに話してほしい技術的なこと、なんでも募集しているのだ！ぼくに話しかけてほしいのだ！それでは、今日はこの辺で終わりにするのだ！また次回の放送で会えるのを、楽しみにしているのだ！ずんだもんがお送りしたのだー！バイバイなのだー！
