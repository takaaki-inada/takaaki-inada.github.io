name: GitHub Pages
# https://github.com/actions/starter-workflows/tree/main/pages

on:
  push:
    branches:
      - master

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version-file: '.nvmrc'

      # ChatVRM
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: |
          npm ci
      - name: Build with Next.js
        run: |
          npx --no-install next build
      - name: Static HTML export with Next.js
        run: |
          npx --no-install next export -o _site/
          mkdir -p _site/welcome
          cp _site/index.html _site/welcome/index.html

      # marp (/slides)
      # - name: Install dependencies
      #   run: npm ci
      - name: Build Marp slide deck
        run: |
          CHROME_PATH=$(npx -y @puppeteer/browsers@latest install chrome@stable --path $(realpath ./tmp) | awk '{print $2}') npm run buildmarp
        env:
          # Please update URL if you want to use custom domain
          # URL: https://${{ github.event.repository.owner.name }}.github.io/${{ github.event.repository.name }}
          URL: https://zund-arm-on.com

      # jekyll (/episodes and /audio)
      - name: Build
        uses: actions/jekyll-build-pages@v1
        with:
          destination: "./output"

      - name: Fix permissions and merge artifacts.
        run: |
          sudo chown -R $USER:$GROUPS output
          cp -r output/* _site/
          ls -Rl _site

      # Upload _site/ directory
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
